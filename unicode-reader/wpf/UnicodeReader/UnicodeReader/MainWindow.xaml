<Window x:Class="UnicodeReader.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UnicodeReader"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        mc:Ignorable="d"
        Title="Unicode Reader" Height="450" Width="800">

    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <Style x:Key="ButtonHoverStyle" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#00A1A1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid x:Name="mainGrid" Background="{Binding Background,UpdateSourceTrigger=PropertyChanged}">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid>
            <ToggleButton IsChecked="{Binding IsBackDropVisible}" Width="50" HorizontalAlignment="Left" ToolTip="Server Connection" Margin="0 5 5 5">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#00A1A1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
                <Image Source="{Binding HumbergerIcon,UpdateSourceTrigger=PropertyChanged}"/>
            </ToggleButton>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <Button x:Name="changeTheme" Command="{Binding ThemeCommand,UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding ElementName=mainGrid}"
                        ToolTip="Change Theme" Width="50" Margin="5 5 0 5" Style="{StaticResource ButtonHoverStyle}">
                    <Image Source="{Binding ThemeIcon,UpdateSourceTrigger=PropertyChanged}"/>
                </Button>
                <Button x:Name="refreshFeed" Command="{Binding RefreshCommand,UpdateSourceTrigger=PropertyChanged}" ToolTip="Import Feed" Width="50" Margin=" 0 5 5 5" Style="{StaticResource ButtonHoverStyle}">
                    <Image Source="{Binding RefreshIcon,UpdateSourceTrigger=PropertyChanged}"/>
                </Button>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25*" MinWidth="30"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="30*" MinWidth="30"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="60*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Background="Transparent" MinWidth="150" HorizontalAlignment="Left">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBackDropVisible}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <Grid Margin="0 30 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <!--<Label Content="Server" Foreground="{Binding TextColor, RelativeSource={RelativeSource AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>-->
                    <Label Content="Server" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>
                    <TextBox Text="{Binding ServerName,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Background="Transparent" Margin="5" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}"/>

                    <Label Content="Port" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1"  Margin="5"/>
                    <TextBox Text="{Binding Port,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1" Background="Transparent"  Margin="5" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}"/>

                    <Label Content="User" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Margin="5"/>
                    <TextBox Text="{Binding User,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="2" Background="Transparent" Margin="5" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}"/>

                    <Label Content="Password" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Margin="5"/>
                    <TextBox Text="{Binding Password,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="3" Background="Transparent" Margin="5" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}"/>

                    <Label Content="Database" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}" Grid.Row="4" Margin="5"/>
                    <TextBox Text="{Binding Database,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="4" Background="Transparent" Margin="5" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}"/>

                    <Button Content="ConnectButton" Command="{Binding ConnectCommand,UpdateSourceTrigger=PropertyChanged}" Grid.Row="5" Grid.ColumnSpan="2" Margin="5"/>
                </Grid>

            </StackPanel>

            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBackDropVisible}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <ListBox x:Name="feed" ItemsSource="{Binding FeedList,UpdateSourceTrigger=PropertyChanged}" Background="Transparent" VerticalAlignment="Stretch"
                         Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedFeed,UpdateSourceTrigger=PropertyChanged}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Image DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext}" HorizontalAlignment="Left"
                                       Source="{Binding Arrow,UpdateSourceTrigger=PropertyChanged}" Height="20" Width="20"  VerticalAlignment="Center"/>
                                    <Grid Grid.Column="1">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" Margin="5 5 5 0" />
                                        <TextBlock Text="{Binding Url}" TextTrimming="CharacterEllipsis" Margin="5 0 5 0" Grid.Row="1"/>
                                    </Grid>
                                    <Image DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext}" HorizontalAlignment="Right"
                                       Source="{Binding RightArrow,UpdateSourceTrigger=PropertyChanged}" Height="10" Width="10" VerticalAlignment="Center" Grid.Column="2" Margin="10" />
                                </Grid>
                                <Separator Opacity="1" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" >
                                            <ContentPresenter/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="#00A1A1" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>
                </ListBox>
            </Grid>

            <GridSplitter HorizontalAlignment="Center" VerticalAlignment="Stretch" Grid.Column="1" Width="5" Background="Silver"/>

            <Grid Grid.Column="2">
                <ListBox x:Name="feedItems" ItemsSource="{Binding FeedItemsList,UpdateSourceTrigger=PropertyChanged}" Background="Transparent" 
                      Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedFeedItem,UpdateSourceTrigger=PropertyChanged}" 
                     HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" MinWidth="20">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Image DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext}" HorizontalAlignment="Left"
                                       Source="{Binding Arrow,UpdateSourceTrigger=PropertyChanged}" Height="20" Width="20"  VerticalAlignment="Center"/>
                                    <Grid Grid.Column="1">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Binding title}" TextTrimming="CharacterEllipsis" Margin="5 5 5 0" />
                                        <TextBlock Text="{Binding link}" TextTrimming="CharacterEllipsis" Margin="5 0 5 0" Grid.Row="1"/>
                                    </Grid>
                                    <Image DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext}" HorizontalAlignment="Right"
                                       Source="{Binding RightArrow,UpdateSourceTrigger=PropertyChanged}" Height="10" Width="10" VerticalAlignment="Center" Grid.Column="2" Margin="10" />
                                </Grid>
                                <Separator Opacity="1" Foreground="{Binding Foreground, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" >
                                            <ContentPresenter/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="#00A1A1" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>

                    <ListBox.Style>
                        <Style TargetType="{x:Type ListBox}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsListBusy}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
                </ListBox>

                <Grid Name="spinnerGridList">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsListBusy}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Image Width="115" Height="115" gif:ImageBehavior.AnimatedSource="Spinner.gif" />
                </Grid>
            </Grid>
            <GridSplitter HorizontalAlignment="Center" VerticalAlignment="Stretch" Grid.Column="3" Width="5" Background="Silver"/>

            <Grid x:Name="feedGrid" Grid.Column="4">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBusy}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <WebBrowser x:Name="feedData"  Opacity="0" OpacityMask="{x:Null}" Navigated="feedData_Navigated"
                        local:MainWindow.BindableSource="{Binding FeedUrl,UpdateSourceTrigger=PropertyChanged}">
                    <WebBrowser.Style>
                        <Style TargetType="WebBrowser">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsWebBrowserVisible}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </WebBrowser.Style>
                </WebBrowser>
            </Grid>

            <Grid Name="spinnerGrid" Grid.Column="4">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Setter Property="Background" Value="Transparent"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBusy}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Image Width="115" Height="115" gif:ImageBehavior.AnimatedSource="Spinner.gif" />
            </Grid>
        </Grid>
    </Grid>
</Window>
